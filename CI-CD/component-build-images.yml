name: Build and Push to ECR

on:
  workflow_call:
    inputs:
      push:
        description: Should the images be pushed to the container registry
        required: true
        type: boolean
      version:
        description: Version tag for the Docker images
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  ECR_REPO_URI: 314147830127.dkr.ecr.us-east-1.amazonaws.com/otel-demo

jobs:
  protobufcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate Protobuf
        run: make clean docker-generate-protobuf
      - name: Check Work Tree
        run: make check-clean-work-tree

  build_and_push:
    runs-on: ubuntu-latest
    needs: protobufcheck
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        services:
          - file: ./src/accountingservice/Dockerfile
            tag_suffix: accountingservice
            context: ./
            setup-qemu: true
            paths: ['./src/accountingservice/**/*']
          - file: ./src/adservice/Dockerfile
            tag_suffix: adservice
            context: ./
            setup-qemu: true
            paths: ['./src/adservice/**/*']
          - file: ./src/cartservice/src/Dockerfile
            tag_suffix: cartservice
            context: ./
            setup-qemu: false
            paths: ['./src/cartservice/**/*']
          - file: ./src/checkoutservice/Dockerfile
            tag_suffix: checkoutservice
            context: ./
            setup-qemu: true
            paths: ['./src/checkoutservice/**/*']
          - file: ./src/currencyservice/Dockerfile
            tag_suffix: currencyservice
            context: ./
            setup-qemu: true
            paths: ['./src/currencyservice/**/*']
          - file: ./src/emailservice/Dockerfile
            tag_suffix: emailservice
            context: ./
            setup-qemu: true
            paths: ['./src/emailservice/**/*']
          - file: ./src/frauddetectionservice/Dockerfile
            tag_suffix: frauddetectionservice
            context: ./
            setup-qemu: true
            paths: ['./src/frauddetectionservice/**/*']
          - file: ./src/frontend/Dockerfile
            tag_suffix: frontend
            context: ./
            setup-qemu: true
            paths: ['./src/frontend/**/*']
          - file: ./src/frontendproxy/Dockerfile
            tag_suffix: frontendproxy
            context: ./
            setup-qemu: true
            paths: ['./src/frontendproxy/**/*']
          - file: ./src/imageprovider/Dockerfile
            tag_suffix: imageprovider
            context: ./
            setup-qemu: true
            paths: ['./src/imageprovider/**/*']
          - file: ./src/kafka/Dockerfile
            tag_suffix: kafka
            context: ./
            setup-qemu: true
            paths: ['./src/kafka/**/*']
          - file: ./src/loadgenerator/Dockerfile
            tag_suffix: loadgenerator
            context: ./
            setup-qemu: true
            paths: ['./src/loadgenerator/**/*']
          - file: ./src/paymentservice/Dockerfile
            tag_suffix: paymentservice
            context: ./
            setup-qemu: true
            paths: ['./src/paymentservice/**/*']
          - file: ./src/productcatalogservice/Dockerfile
            tag_suffix: productcatalogservice
            context: ./
            setup-qemu: true
            paths: ['./src/productcatalogservice/**/*']
          - file: ./src/quoteservice/Dockerfile
            tag_suffix: quoteservice
            context: ./
            setup-qemu: true
            paths: ['./src/quoteservice/**/*']
          - file: ./src/recommendationservice/Dockerfile
            tag_suffix: recommendationservice
            context: ./
            setup-qemu: true
            paths: ['./src/recommendationservice/**/*']
          - file: ./src/shippingservice/Dockerfile
            tag_suffix: shippingservice
            context: ./
            setup-qemu: true
            paths: ['./src/shippingservice/**/*']
          - file: ./src/flagd-ui/Dockerfile
            tag_suffix: flagdui
            context: ./
            setup-qemu: true
            paths: ['./src/flagd-ui/**/*']
          - file: ./test/tracetesting/Dockerfile
            tag_suffix: traceBasedTests
            context: ./
            setup-qemu: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changes for current service
        id: detect-changes
        run: |
          echo "CHANGED=false" >> $GITHUB_ENV
          for path in ${{ matrix.services.paths }}; do
            if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "$path"; then
              echo "CHANGED=true" >> $GITHUB_ENV
              break
            fi
          done

      - name: Load environment variables from .env file
        run: |
          if [ -f .env ]; then
            grep -vE '^\s*#|^\s*$' .env | while read -r line; do
              echo "$line" >> $GITHUB_ENV
            done
          else
            echo "No .env file found, proceeding without additional environment variables."
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up QEMU
        if: ${{ matrix.services.setup-qemu }}
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
            max-parallelism = 4

      - name: Build and push Docker images
        if: env.CHANGED == 'true'
        uses: docker/build-push-action@v6.10.0
        with:
          context: ${{ matrix.services.context }}
          file: ${{ matrix.services.file }}
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push }}
          build-args: |
            OTEL_JAVA_AGENT_VERSION=${{ env.OTEL_JAVA_AGENT_VERSION }}
            OPENTELEMETRY_CPP_VERSION=${{ env.OPENTELEMETRY_CPP_VERSION }}
            TRACETEST_IMAGE_VERSION=${{ env.TRACETEST_IMAGE_VERSION }}
          tags: |
            ${{ env.ECR_REPO_URI }}:${{ inputs.version }}-${{ matrix.services.tag_suffix }}
            ${{ env.ECR_REPO_URI }}:latest-${{ matrix.services.tag_suffix }}
